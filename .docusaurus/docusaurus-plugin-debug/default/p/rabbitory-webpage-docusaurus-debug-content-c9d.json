{"allContent":{"docusaurus-plugin-content-docs":{"default":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/rabbitory_webpage/docs","tagsPath":"/rabbitory_webpage/docs/tags","isLast":true,"routePriority":-1,"sidebarFilePath":"/Users/larenhoustoun/Documents/new-docs/rabbitory/rabbitory_website/sidebars.js","contentPath":"/Users/larenhoustoun/Documents/new-docs/rabbitory/rabbitory_website/docs","contentPathLocalized":"/Users/larenhoustoun/Documents/new-docs/rabbitory/rabbitory_website/i18n/en/docusaurus-plugin-content-docs/current","docs":[{"id":"ArchitectureOverview","title":"Architecture Overview","description":"Architecture Overview","source":"@site/docs/ArchitectureOverview.md","sourceDirName":".","slug":"/ArchitectureOverview","permalink":"/rabbitory_webpage/docs/ArchitectureOverview","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_label":"Architecture Overview","sidebar_position":4,"description":"Architecture Overview"},"sidebar":"tutorialSidebar","previous":{"title":"The Control Panel","permalink":"/rabbitory_webpage/docs/ControlPanel"},"next":{"title":"Technical Decisions & Challenges","permalink":"/rabbitory_webpage/docs/Technical"}},{"id":"ControlPanel","title":"The Control Panel","description":"The Rabbitory Control Panel enables Rabbitory to function as a RabbitMQ-as-a-Service solution. It provides a centralized interface for provisioning, configuring, and managing RabbitMQ instances, as well as the underlying EC2 infrastructure of each instance. Designed for flexibility and ease of use, the Control Panel streamlines complex server management tasks into a smooth and accessible user experience. Here are the key features:","source":"@site/docs/ControlPanel.md","sourceDirName":".","slug":"/ControlPanel","permalink":"/rabbitory_webpage/docs/ControlPanel","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_label":"The Control Panel","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Meet Rabbitory","permalink":"/rabbitory_webpage/docs/MeetRabbitory"},"next":{"title":"Architecture Overview","permalink":"/rabbitory_webpage/docs/ArchitectureOverview"}},{"id":"Introduction","title":"Introduction","description":"Rabbitory is an open-source, self-hosted message queue management tool built specifically for RabbitMQ, one of the most widely used message brokers in modern software systems. Rabbitory simplifies the deployment and configuration of RabbitMQ instances on AWS while maintaining visibility into cost and infrastructure setup. To understand why a tool like Rabbitory matters, letâ€™s first explore what message queues are, how RabbitMQ fits into that domain, and why these tools are so valuable in modern distributed systems.","source":"@site/docs/Introduction.md","sourceDirName":".","slug":"/Introduction","permalink":"/rabbitory_webpage/docs/Introduction","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_label":"Introduction","sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Meet Rabbitory","permalink":"/rabbitory_webpage/docs/MeetRabbitory"}},{"id":"MeetRabbitory","title":"Meet Rabbitory","description":"Concerns around cost inflation and limited transparency are common in the managed message broker space. This is where Rabbitory steps in. Rabbitory is a self-hosted RabbitMQ-as-a-Service platform that offers the streamlined experience of a managed message broker without the cost or complexity of existing services. Rabbitory is built for developers on small to mid-sized teams who want the convenience of a managed RabbitMQ without giving up cost control or infrastructure ownership.","source":"@site/docs/MeetRabbitory.md","sourceDirName":".","slug":"/MeetRabbitory","permalink":"/rabbitory_webpage/docs/MeetRabbitory","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_label":"Meet Rabbitory","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/rabbitory_webpage/docs/Introduction"},"next":{"title":"The Control Panel","permalink":"/rabbitory_webpage/docs/ControlPanel"}},{"id":"Technical","title":"Technical Decisions & Challenges","description":"Automating the AWS Cloud infrastructure and designing the Control Panel for Rabbitory came with its own set of unique considerations and challenges. Below is a summary of the most salient decisions we made as a team and what challenges we encountered in building this tool.","source":"@site/docs/Technical.md","sourceDirName":".","slug":"/Technical","permalink":"/rabbitory_webpage/docs/Technical","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_label":"Technical Decisions & Challenges","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Architecture Overview","permalink":"/rabbitory_webpage/docs/ArchitectureOverview"}}],"drafts":[],"sidebars":{"tutorialSidebar":[{"type":"doc","id":"Introduction","label":"Introduction"},{"type":"doc","id":"MeetRabbitory","label":"Meet Rabbitory"},{"type":"doc","id":"ControlPanel","label":"The Control Panel"},{"type":"doc","id":"ArchitectureOverview","label":"Architecture Overview"},{"type":"doc","id":"Technical","label":"Technical Decisions & Challenges"}]}}]}},"docusaurus-plugin-content-blog":{"default":{"blogSidebarTitle":"Recent posts","blogPosts":[],"blogListPaginated":[],"blogTags":{},"blogTagsListPath":"/rabbitory_webpage/blog/tags"}},"docusaurus-plugin-content-pages":{"default":[{"type":"jsx","permalink":"/rabbitory_webpage/","source":"@site/src/pages/index.js"},{"type":"jsx","permalink":"/rabbitory_webpage/team","source":"@site/src/pages/team.js"}]},"docusaurus-plugin-debug":{},"docusaurus-plugin-svgr":{},"docusaurus-theme-classic":{},"docusaurus-bootstrap-plugin":{},"docusaurus-mdx-fallback-plugin":{}}}